============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259400173,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259400173,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '211874', 'issue_key': 'AAFAIA-6366', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259400.1730669
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259400.1732843
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55af04fe34e3 <unknown>\n#1 0x55af04d12c76 <unknown>\n#2 0x55af04d4004a <unknown>\n#3 0x55af04d3b4a1 <unknown>\n#4 0x55af04d38029 <unknown>\n#5 0x55af04d76ccc <unknown>\n#6 0x55af04d7647f <unknown>\n#7 0x55af04d6dde3 <unknown>\n#8 0x55af04d432dd <unknown>\n#9 0x55af04d4434e <unknown>\n#10 0x55af04fa33e4 <unknown>\n#11 0x55af04fa73d7 <unknown>\n#12 0x55af04fb1b20 <unknown>\n#13 0x55af04fa8023 <unknown>\n#14 0x55af04f761aa <unknown>\n#15 0x55af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:1 Passed:0 Failed:1
stest_1_selenium_view_project_summary,Total:2 Passed:0 Failed:1
stest_1_selenium_browse_projects_list,Total:3 Passed:0 Failed:1
stest_1_selenium_browse_boards_list,Total:4 Passed:0 Failed:1
stest_1_selenium_create_issue,Total:5 Passed:0 Failed:1
stest_1_selenium_edit_issue,Total:6 Passed:0 Failed:1
stest_1_selenium_save_comment,Total:7 Passed:0 Failed:1
stest_1_selenium_search_jql,Total:8 Passed:0 Failed:1
stest_1_selenium_view_backlog_for_scrum_board,Total:9 Passed:0 Failed:1
stest_1_selenium_view_scrum_board,Total:10 Passed:0 Failed:1
stest_1_selenium_view_kanban_board,Total:11 Passed:0 Failed:1
stest_1_selenium_view_dashboard,Total:12 Passed:0 Failed:1
stest_1_selenium_view_issue,Total:13 Passed:0 Failed:1
stest_2_selenium_z_log_out,Total:14 Passed:0 Failed:1


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '211874', 'issue_key': 'AAFAIA-6366', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259400.1730669
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259400.1732843
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55af04fe34e3 <unknown>\n#1 0x55af04d12c76 <unknown>\n#2 0x55af04d4004a <unknown>\n#3 0x55af04d3b4a1 <unknown>\n#4 0x55af04d38029 <unknown>\n#5 0x55af04d76ccc <unknown>\n#6 0x55af04d7647f <unknown>\n#7 0x55af04d6dde3 <unknown>\n#8 0x55af04d432dd <unknown>\n#9 0x55af04d4434e <unknown>\n#10 0x55af04fa33e4 <unknown>\n#11 0x55af04fa73d7 <unknown>\n#12 0x55af04fb1b20 <unknown>\n#13 0x55af04fa8023 <unknown>\n#14 0x55af04f761aa <unknown>\n#15 0x55af04fcc6b8 <unknown>\n#16 0x55af04fcc847 <unknown>\n#17 0x55af04fdc243 <unknown>\n#18 0x7fd9577feea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.87s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259400897,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259400897,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...558cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '209621', 'issue_key': 'AAFAIA-4113', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259400.8970456
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...58cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259400.8972523
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x558cb7e2b4e3 <unknown>\n#1 0x558cb7b5ac76 <unknown>\n#2 0x558cb7b8804a <unknown>\n#3 0x558cb7b834a1 <unknown>\n#4 0x558cb7b80029 <unknown>\n#5 0x558cb7bbeccc <unknown>\n#6 0x558cb7bbe47f <unknown>\n#7 0x558cb7bb5de3 <unknown>\n#8 0x558cb7b8b2dd <unknown>\n#9 0x558cb7b8c34e <unknown>\n#10 0x558cb7deb3e4 <unknown>\n#11 0x558cb7def3d7 <unknown>\n#12 0x558cb7df9b20 <unknown>\n#13 0x558cb7df0023 <unknown>\n#14 0x558cb7dbe1aa <unknown>\n#15 0x558cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:15 Passed:0 Failed:2
stest_1_selenium_view_project_summary,Total:16 Passed:0 Failed:2
stest_1_selenium_browse_projects_list,Total:17 Passed:0 Failed:2
stest_1_selenium_browse_boards_list,Total:18 Passed:0 Failed:2
stest_1_selenium_create_issue,Total:19 Passed:0 Failed:2
stest_1_selenium_edit_issue,Total:20 Passed:0 Failed:2
stest_1_selenium_save_comment,Total:21 Passed:0 Failed:2
stest_1_selenium_search_jql,Total:22 Passed:0 Failed:2
stest_1_selenium_view_backlog_for_scrum_board,Total:23 Passed:0 Failed:2
stest_1_selenium_view_scrum_board,Total:24 Passed:0 Failed:2
stest_1_selenium_view_kanban_board,Total:25 Passed:0 Failed:2
stest_1_selenium_view_dashboard,Total:26 Passed:0 Failed:2
stest_1_selenium_view_issue,Total:27 Passed:0 Failed:2
stest_2_selenium_z_log_out,Total:28 Passed:0 Failed:2


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...558cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...558cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...558cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '209621', 'issue_key': 'AAFAIA-4113', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259400.8970456
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...58cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259400.8972523
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x558cb7e2b4e3 <unknown>\n#1 0x558cb7b5ac76 <unknown>\n#2 0x558cb7b8804a <unknown>\n#3 0x558cb7b834a1 <unknown>\n#4 0x558cb7b80029 <unknown>\n#5 0x558cb7bbeccc <unknown>\n#6 0x558cb7bbe47f <unknown>\n#7 0x558cb7bb5de3 <unknown>\n#8 0x558cb7b8b2dd <unknown>\n#9 0x558cb7b8c34e <unknown>\n#10 0x558cb7deb3e4 <unknown>\n#11 0x558cb7def3d7 <unknown>\n#12 0x558cb7df9b20 <unknown>\n#13 0x558cb7df0023 <unknown>\n#14 0x558cb7dbe1aa <unknown>\n#15 0x558cb7e146b8 <unknown>\n#16 0x558cb7e14847 <unknown>\n#17 0x558cb7e24243 <unknown>\n#18 0x7f1a64418ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.68s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259401625,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259401626,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915092', 'issue_key': 'AABIS-528', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259401.625222
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259401.6255083
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5594d4ae94e3 <unknown>\n#1 0x5594d4818c76 <unknown>\n#2 0x5594d484604a <unknown>\n#3 0x5594d48414a1 <unknown>\n#4 0x5594d483e029 <unknown>\n#5 0x5594d487cccc <unknown>\n#6 0x5594d487c47f <unknown>\n#7 0x5594d4873de3 <unknown>\n#8 0x5594d48492dd <unknown>\n#9 0x5594d484a34e <unknown>\n#10 0x5594d4aa93e4 <unknown>\n#11 0x5594d4aad3d7 <unknown>\n#12 0x5594d4ab7b20 <unknown>\n#13 0x5594d4aae023 <unknown>\n#14 0x5594d4a7c1aa <unknown>\n#15 0x5594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:29 Passed:0 Failed:3
stest_1_selenium_view_project_summary,Total:30 Passed:0 Failed:3
stest_1_selenium_browse_projects_list,Total:31 Passed:0 Failed:3
stest_1_selenium_browse_boards_list,Total:32 Passed:0 Failed:3
stest_1_selenium_create_issue,Total:33 Passed:0 Failed:3
stest_1_selenium_edit_issue,Total:34 Passed:0 Failed:3
stest_1_selenium_save_comment,Total:35 Passed:0 Failed:3
stest_1_selenium_search_jql,Total:36 Passed:0 Failed:3
stest_1_selenium_view_backlog_for_scrum_board,Total:37 Passed:0 Failed:3
stest_1_selenium_view_scrum_board,Total:38 Passed:0 Failed:3
stest_1_selenium_view_kanban_board,Total:39 Passed:0 Failed:3
stest_1_selenium_view_dashboard,Total:40 Passed:0 Failed:3
stest_1_selenium_view_issue,Total:41 Passed:0 Failed:3
stest_2_selenium_z_log_out,Total:42 Passed:0 Failed:3


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915092', 'issue_key': 'AABIS-528', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259401.625222
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259401.6255083
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5594d4ae94e3 <unknown>\n#1 0x5594d4818c76 <unknown>\n#2 0x5594d484604a <unknown>\n#3 0x5594d48414a1 <unknown>\n#4 0x5594d483e029 <unknown>\n#5 0x5594d487cccc <unknown>\n#6 0x5594d487c47f <unknown>\n#7 0x5594d4873de3 <unknown>\n#8 0x5594d48492dd <unknown>\n#9 0x5594d484a34e <unknown>\n#10 0x5594d4aa93e4 <unknown>\n#11 0x5594d4aad3d7 <unknown>\n#12 0x5594d4ab7b20 <unknown>\n#13 0x5594d4aae023 <unknown>\n#14 0x5594d4a7c1aa <unknown>\n#15 0x5594d4ad26b8 <unknown>\n#16 0x5594d4ad2847 <unknown>\n#17 0x5594d4ae2243 <unknown>\n#18 0x7fcd07bbaea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.70s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259402363,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259402364,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...563467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '914722', 'issue_key': 'AABIS-158', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259402.363138
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...63467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259402.3634324
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x563467f4e4e3 <unknown>\n#1 0x563467c7dc76 <unknown>\n#2 0x563467cab04a <unknown>\n#3 0x563467ca64a1 <unknown>\n#4 0x563467ca3029 <unknown>\n#5 0x563467ce1ccc <unknown>\n#6 0x563467ce147f <unknown>\n#7 0x563467cd8de3 <unknown>\n#8 0x563467cae2dd <unknown>\n#9 0x563467caf34e <unknown>\n#10 0x563467f0e3e4 <unknown>\n#11 0x563467f123d7 <unknown>\n#12 0x563467f1cb20 <unknown>\n#13 0x563467f13023 <unknown>\n#14 0x563467ee11aa <unknown>\n#15 0x563467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:43 Passed:0 Failed:4
stest_1_selenium_view_project_summary,Total:44 Passed:0 Failed:4
stest_1_selenium_browse_projects_list,Total:45 Passed:0 Failed:4
stest_1_selenium_browse_boards_list,Total:46 Passed:0 Failed:4
stest_1_selenium_create_issue,Total:47 Passed:0 Failed:4
stest_1_selenium_edit_issue,Total:48 Passed:0 Failed:4
stest_1_selenium_save_comment,Total:49 Passed:0 Failed:4
stest_1_selenium_search_jql,Total:50 Passed:0 Failed:4
stest_1_selenium_view_backlog_for_scrum_board,Total:51 Passed:0 Failed:4
stest_1_selenium_view_scrum_board,Total:52 Passed:0 Failed:4
stest_1_selenium_view_kanban_board,Total:53 Passed:0 Failed:4
stest_1_selenium_view_dashboard,Total:54 Passed:0 Failed:4
stest_1_selenium_view_issue,Total:55 Passed:0 Failed:4
stest_2_selenium_z_log_out,Total:56 Passed:0 Failed:4


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...563467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...563467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...563467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '914722', 'issue_key': 'AABIS-158', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259402.363138
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...63467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259402.3634324
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x563467f4e4e3 <unknown>\n#1 0x563467c7dc76 <unknown>\n#2 0x563467cab04a <unknown>\n#3 0x563467ca64a1 <unknown>\n#4 0x563467ca3029 <unknown>\n#5 0x563467ce1ccc <unknown>\n#6 0x563467ce147f <unknown>\n#7 0x563467cd8de3 <unknown>\n#8 0x563467cae2dd <unknown>\n#9 0x563467caf34e <unknown>\n#10 0x563467f0e3e4 <unknown>\n#11 0x563467f123d7 <unknown>\n#12 0x563467f1cb20 <unknown>\n#13 0x563467f13023 <unknown>\n#14 0x563467ee11aa <unknown>\n#15 0x563467f376b8 <unknown>\n#16 0x563467f37847 <unknown>\n#17 0x563467f47243 <unknown>\n#18 0x7fd2e7602ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.72s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259403092,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259403092,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '207720', 'issue_key': 'AAFAIA-2212', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259403.091445
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259403.0916376
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55f8c161a4e3 <unknown>\n#1 0x55f8c1349c76 <unknown>\n#2 0x55f8c137704a <unknown>\n#3 0x55f8c13724a1 <unknown>\n#4 0x55f8c136f029 <unknown>\n#5 0x55f8c13adccc <unknown>\n#6 0x55f8c13ad47f <unknown>\n#7 0x55f8c13a4de3 <unknown>\n#8 0x55f8c137a2dd <unknown>\n#9 0x55f8c137b34e <unknown>\n#10 0x55f8c15da3e4 <unknown>\n#11 0x55f8c15de3d7 <unknown>\n#12 0x55f8c15e8b20 <unknown>\n#13 0x55f8c15df023 <unknown>\n#14 0x55f8c15ad1aa <unknown>\n#15 0x55f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:57 Passed:0 Failed:5
stest_1_selenium_view_project_summary,Total:58 Passed:0 Failed:5
stest_1_selenium_browse_projects_list,Total:59 Passed:0 Failed:5
stest_1_selenium_browse_boards_list,Total:60 Passed:0 Failed:5
stest_1_selenium_create_issue,Total:61 Passed:0 Failed:5
stest_1_selenium_edit_issue,Total:62 Passed:0 Failed:5
stest_1_selenium_save_comment,Total:63 Passed:0 Failed:5
stest_1_selenium_search_jql,Total:64 Passed:0 Failed:5
stest_1_selenium_view_backlog_for_scrum_board,Total:65 Passed:0 Failed:5
stest_1_selenium_view_scrum_board,Total:66 Passed:0 Failed:5
stest_1_selenium_view_kanban_board,Total:67 Passed:0 Failed:5
stest_1_selenium_view_dashboard,Total:68 Passed:0 Failed:5
stest_1_selenium_view_issue,Total:69 Passed:0 Failed:5
stest_2_selenium_z_log_out,Total:70 Passed:0 Failed:5


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '207720', 'issue_key': 'AAFAIA-2212', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259403.091445
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259403.0916376
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55f8c161a4e3 <unknown>\n#1 0x55f8c1349c76 <unknown>\n#2 0x55f8c137704a <unknown>\n#3 0x55f8c13724a1 <unknown>\n#4 0x55f8c136f029 <unknown>\n#5 0x55f8c13adccc <unknown>\n#6 0x55f8c13ad47f <unknown>\n#7 0x55f8c13a4de3 <unknown>\n#8 0x55f8c137a2dd <unknown>\n#9 0x55f8c137b34e <unknown>\n#10 0x55f8c15da3e4 <unknown>\n#11 0x55f8c15de3d7 <unknown>\n#12 0x55f8c15e8b20 <unknown>\n#13 0x55f8c15df023 <unknown>\n#14 0x55f8c15ad1aa <unknown>\n#15 0x55f8c16036b8 <unknown>\n#16 0x55f8c1603847 <unknown>\n#17 0x55f8c1613243 <unknown>\n#18 0x7f63382ffea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.69s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259403819,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259403819,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '207706', 'issue_key': 'AAFAIA-2198', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259403.818711
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259403.8189118
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55fe83e224e3 <unknown>\n#1 0x55fe83b51c76 <unknown>\n#2 0x55fe83b7f04a <unknown>\n#3 0x55fe83b7a4a1 <unknown>\n#4 0x55fe83b77029 <unknown>\n#5 0x55fe83bb5ccc <unknown>\n#6 0x55fe83bb547f <unknown>\n#7 0x55fe83bacde3 <unknown>\n#8 0x55fe83b822dd <unknown>\n#9 0x55fe83b8334e <unknown>\n#10 0x55fe83de23e4 <unknown>\n#11 0x55fe83de63d7 <unknown>\n#12 0x55fe83df0b20 <unknown>\n#13 0x55fe83de7023 <unknown>\n#14 0x55fe83db51aa <unknown>\n#15 0x55fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:71 Passed:0 Failed:6
stest_1_selenium_view_project_summary,Total:72 Passed:0 Failed:6
stest_1_selenium_browse_projects_list,Total:73 Passed:0 Failed:6
stest_1_selenium_browse_boards_list,Total:74 Passed:0 Failed:6
stest_1_selenium_create_issue,Total:75 Passed:0 Failed:6
stest_1_selenium_edit_issue,Total:76 Passed:0 Failed:6
stest_1_selenium_save_comment,Total:77 Passed:0 Failed:6
stest_1_selenium_search_jql,Total:78 Passed:0 Failed:6
stest_1_selenium_view_backlog_for_scrum_board,Total:79 Passed:0 Failed:6
stest_1_selenium_view_scrum_board,Total:80 Passed:0 Failed:6
stest_1_selenium_view_kanban_board,Total:81 Passed:0 Failed:6
stest_1_selenium_view_dashboard,Total:82 Passed:0 Failed:6
stest_1_selenium_view_issue,Total:83 Passed:0 Failed:6
stest_2_selenium_z_log_out,Total:84 Passed:0 Failed:6


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '207706', 'issue_key': 'AAFAIA-2198', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259403.818711
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259403.8189118
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55fe83e224e3 <unknown>\n#1 0x55fe83b51c76 <unknown>\n#2 0x55fe83b7f04a <unknown>\n#3 0x55fe83b7a4a1 <unknown>\n#4 0x55fe83b77029 <unknown>\n#5 0x55fe83bb5ccc <unknown>\n#6 0x55fe83bb547f <unknown>\n#7 0x55fe83bacde3 <unknown>\n#8 0x55fe83b822dd <unknown>\n#9 0x55fe83b8334e <unknown>\n#10 0x55fe83de23e4 <unknown>\n#11 0x55fe83de63d7 <unknown>\n#12 0x55fe83df0b20 <unknown>\n#13 0x55fe83de7023 <unknown>\n#14 0x55fe83db51aa <unknown>\n#15 0x55fe83e0b6b8 <unknown>\n#16 0x55fe83e0b847 <unknown>\n#17 0x55fe83e1b243 <unknown>\n#18 0x7f134b269ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.68s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259404551,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259404551,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '208566', 'issue_key': 'AAFAIA-3058', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259404.5511565
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259404.5513566
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5582689ac4e3 <unknown>\n#1 0x5582686dbc76 <unknown>\n#2 0x55826870904a <unknown>\n#3 0x5582687044a1 <unknown>\n#4 0x558268701029 <unknown>\n#5 0x55826873fccc <unknown>\n#6 0x55826873f47f <unknown>\n#7 0x558268736de3 <unknown>\n#8 0x55826870c2dd <unknown>\n#9 0x55826870d34e <unknown>\n#10 0x55826896c3e4 <unknown>\n#11 0x5582689703d7 <unknown>\n#12 0x55826897ab20 <unknown>\n#13 0x558268971023 <unknown>\n#14 0x55826893f1aa <unknown>\n#15 0x5582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:85 Passed:0 Failed:7
stest_1_selenium_view_project_summary,Total:86 Passed:0 Failed:7
stest_1_selenium_browse_projects_list,Total:87 Passed:0 Failed:7
stest_1_selenium_browse_boards_list,Total:88 Passed:0 Failed:7
stest_1_selenium_create_issue,Total:89 Passed:0 Failed:7
stest_1_selenium_edit_issue,Total:90 Passed:0 Failed:7
stest_1_selenium_save_comment,Total:91 Passed:0 Failed:7
stest_1_selenium_search_jql,Total:92 Passed:0 Failed:7
stest_1_selenium_view_backlog_for_scrum_board,Total:93 Passed:0 Failed:7
stest_1_selenium_view_scrum_board,Total:94 Passed:0 Failed:7
stest_1_selenium_view_kanban_board,Total:95 Passed:0 Failed:7
stest_1_selenium_view_dashboard,Total:96 Passed:0 Failed:7
stest_1_selenium_view_issue,Total:97 Passed:0 Failed:7
stest_2_selenium_z_log_out,Total:98 Passed:0 Failed:7


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...5582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '208566', 'issue_key': 'AAFAIA-3058', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259404.5511565
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259404.5513566
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5582689ac4e3 <unknown>\n#1 0x5582686dbc76 <unknown>\n#2 0x55826870904a <unknown>\n#3 0x5582687044a1 <unknown>\n#4 0x558268701029 <unknown>\n#5 0x55826873fccc <unknown>\n#6 0x55826873f47f <unknown>\n#7 0x558268736de3 <unknown>\n#8 0x55826870c2dd <unknown>\n#9 0x55826870d34e <unknown>\n#10 0x55826896c3e4 <unknown>\n#11 0x5582689703d7 <unknown>\n#12 0x55826897ab20 <unknown>\n#13 0x558268971023 <unknown>\n#14 0x55826893f1aa <unknown>\n#15 0x5582689956b8 <unknown>\n#16 0x558268995847 <unknown>\n#17 0x5582689a5243 <unknown>\n#18 0x7fb8eebe9ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.70s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259405269,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259405269,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '210179', 'issue_key': 'AAFAIA-4671', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259405.2683613
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...6450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259405.2686336
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x56450a08c4e3 <unknown>\n#1 0x564509dbbc76 <unknown>\n#2 0x564509de904a <unknown>\n#3 0x564509de44a1 <unknown>\n#4 0x564509de1029 <unknown>\n#5 0x564509e1fccc <unknown>\n#6 0x564509e1f47f <unknown>\n#7 0x564509e16de3 <unknown>\n#8 0x564509dec2dd <unknown>\n#9 0x564509ded34e <unknown>\n#10 0x56450a04c3e4 <unknown>\n#11 0x56450a0503d7 <unknown>\n#12 0x56450a05ab20 <unknown>\n#13 0x56450a051023 <unknown>\n#14 0x56450a01f1aa <unknown>\n#15 0x56450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:99 Passed:0 Failed:8
stest_1_selenium_view_project_summary,Total:100 Passed:0 Failed:8
stest_1_selenium_browse_projects_list,Total:101 Passed:0 Failed:8
stest_1_selenium_browse_boards_list,Total:102 Passed:0 Failed:8
stest_1_selenium_create_issue,Total:103 Passed:0 Failed:8
stest_1_selenium_edit_issue,Total:104 Passed:0 Failed:8
stest_1_selenium_save_comment,Total:105 Passed:0 Failed:8
stest_1_selenium_search_jql,Total:106 Passed:0 Failed:8
stest_1_selenium_view_backlog_for_scrum_board,Total:107 Passed:0 Failed:8
stest_1_selenium_view_scrum_board,Total:108 Passed:0 Failed:8
stest_1_selenium_view_kanban_board,Total:109 Passed:0 Failed:8
stest_1_selenium_view_dashboard,Total:110 Passed:0 Failed:8
stest_1_selenium_view_issue,Total:111 Passed:0 Failed:8
stest_2_selenium_z_log_out,Total:112 Passed:0 Failed:8


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '210179', 'issue_key': 'AAFAIA-4671', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259405.2683613
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...6450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259405.2686336
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x56450a08c4e3 <unknown>\n#1 0x564509dbbc76 <unknown>\n#2 0x564509de904a <unknown>\n#3 0x564509de44a1 <unknown>\n#4 0x564509de1029 <unknown>\n#5 0x564509e1fccc <unknown>\n#6 0x564509e1f47f <unknown>\n#7 0x564509e16de3 <unknown>\n#8 0x564509dec2dd <unknown>\n#9 0x564509ded34e <unknown>\n#10 0x56450a04c3e4 <unknown>\n#11 0x56450a0503d7 <unknown>\n#12 0x56450a05ab20 <unknown>\n#13 0x56450a051023 <unknown>\n#14 0x56450a01f1aa <unknown>\n#15 0x56450a0756b8 <unknown>\n#16 0x56450a075847 <unknown>\n#17 0x56450a085243 <unknown>\n#18 0x7f6830ecbea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.69s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259405973,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259405973,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206931', 'issue_key': 'AAFAIA-1423', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259405.972857
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259405.973048
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55c0ed1be4e3 <unknown>\n#1 0x55c0eceedc76 <unknown>\n#2 0x55c0ecf1b04a <unknown>\n#3 0x55c0ecf164a1 <unknown>\n#4 0x55c0ecf13029 <unknown>\n#5 0x55c0ecf51ccc <unknown>\n#6 0x55c0ecf5147f <unknown>\n#7 0x55c0ecf48de3 <unknown>\n#8 0x55c0ecf1e2dd <unknown>\n#9 0x55c0ecf1f34e <unknown>\n#10 0x55c0ed17e3e4 <unknown>\n#11 0x55c0ed1823d7 <unknown>\n#12 0x55c0ed18cb20 <unknown>\n#13 0x55c0ed183023 <unknown>\n#14 0x55c0ed1511aa <unknown>\n#15 0x55c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:113 Passed:0 Failed:9
stest_1_selenium_view_project_summary,Total:114 Passed:0 Failed:9
stest_1_selenium_browse_projects_list,Total:115 Passed:0 Failed:9
stest_1_selenium_browse_boards_list,Total:116 Passed:0 Failed:9
stest_1_selenium_create_issue,Total:117 Passed:0 Failed:9
stest_1_selenium_edit_issue,Total:118 Passed:0 Failed:9
stest_1_selenium_save_comment,Total:119 Passed:0 Failed:9
stest_1_selenium_search_jql,Total:120 Passed:0 Failed:9
stest_1_selenium_view_backlog_for_scrum_board,Total:121 Passed:0 Failed:9
stest_1_selenium_view_scrum_board,Total:122 Passed:0 Failed:9
stest_1_selenium_view_kanban_board,Total:123 Passed:0 Failed:9
stest_1_selenium_view_dashboard,Total:124 Passed:0 Failed:9
stest_1_selenium_view_issue,Total:125 Passed:0 Failed:9
stest_2_selenium_z_log_out,Total:126 Passed:0 Failed:9


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206931', 'issue_key': 'AAFAIA-1423', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259405.972857
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259405.973048
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55c0ed1be4e3 <unknown>\n#1 0x55c0eceedc76 <unknown>\n#2 0x55c0ecf1b04a <unknown>\n#3 0x55c0ecf164a1 <unknown>\n#4 0x55c0ecf13029 <unknown>\n#5 0x55c0ecf51ccc <unknown>\n#6 0x55c0ecf5147f <unknown>\n#7 0x55c0ecf48de3 <unknown>\n#8 0x55c0ecf1e2dd <unknown>\n#9 0x55c0ecf1f34e <unknown>\n#10 0x55c0ed17e3e4 <unknown>\n#11 0x55c0ed1823d7 <unknown>\n#12 0x55c0ed18cb20 <unknown>\n#13 0x55c0ed183023 <unknown>\n#14 0x55c0ed1511aa <unknown>\n#15 0x55c0ed1a76b8 <unknown>\n#16 0x55c0ed1a7847 <unknown>\n#17 0x55c0ed1b7243 <unknown>\n#18 0x7fb93806fea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.67s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259406693,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259406693,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915466', 'issue_key': 'AABIS-902', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259406.6924977
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259406.69276
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55ce8f79f4e3 <unknown>\n#1 0x55ce8f4cec76 <unknown>\n#2 0x55ce8f4fc04a <unknown>\n#3 0x55ce8f4f74a1 <unknown>\n#4 0x55ce8f4f4029 <unknown>\n#5 0x55ce8f532ccc <unknown>\n#6 0x55ce8f53247f <unknown>\n#7 0x55ce8f529de3 <unknown>\n#8 0x55ce8f4ff2dd <unknown>\n#9 0x55ce8f50034e <unknown>\n#10 0x55ce8f75f3e4 <unknown>\n#11 0x55ce8f7633d7 <unknown>\n#12 0x55ce8f76db20 <unknown>\n#13 0x55ce8f764023 <unknown>\n#14 0x55ce8f7321aa <unknown>\n#15 0x55ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:127 Passed:0 Failed:10
stest_1_selenium_view_project_summary,Total:128 Passed:0 Failed:10
stest_1_selenium_browse_projects_list,Total:129 Passed:0 Failed:10
stest_1_selenium_browse_boards_list,Total:130 Passed:0 Failed:10
stest_1_selenium_create_issue,Total:131 Passed:0 Failed:10
stest_1_selenium_edit_issue,Total:132 Passed:0 Failed:10
stest_1_selenium_save_comment,Total:133 Passed:0 Failed:10
stest_1_selenium_search_jql,Total:134 Passed:0 Failed:10
stest_1_selenium_view_backlog_for_scrum_board,Total:135 Passed:0 Failed:10
stest_1_selenium_view_scrum_board,Total:136 Passed:0 Failed:10
stest_1_selenium_view_kanban_board,Total:137 Passed:0 Failed:10
stest_1_selenium_view_dashboard,Total:138 Passed:0 Failed:10
stest_1_selenium_view_issue,Total:139 Passed:0 Failed:10
stest_2_selenium_z_log_out,Total:140 Passed:0 Failed:10


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915466', 'issue_key': 'AABIS-902', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259406.6924977
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259406.69276
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55ce8f79f4e3 <unknown>\n#1 0x55ce8f4cec76 <unknown>\n#2 0x55ce8f4fc04a <unknown>\n#3 0x55ce8f4f74a1 <unknown>\n#4 0x55ce8f4f4029 <unknown>\n#5 0x55ce8f532ccc <unknown>\n#6 0x55ce8f53247f <unknown>\n#7 0x55ce8f529de3 <unknown>\n#8 0x55ce8f4ff2dd <unknown>\n#9 0x55ce8f50034e <unknown>\n#10 0x55ce8f75f3e4 <unknown>\n#11 0x55ce8f7633d7 <unknown>\n#12 0x55ce8f76db20 <unknown>\n#13 0x55ce8f764023 <unknown>\n#14 0x55ce8f7321aa <unknown>\n#15 0x55ce8f7886b8 <unknown>\n#16 0x55ce8f788847 <unknown>\n#17 0x55ce8f798243 <unknown>\n#18 0x7f4a7f2c9ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.71s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259407430,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259407430,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '207094', 'issue_key': 'AAFAIA-1586', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259407.4301438
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259407.430338
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55b37ac3a4e3 <unknown>\n#1 0x55b37a969c76 <unknown>\n#2 0x55b37a99704a <unknown>\n#3 0x55b37a9924a1 <unknown>\n#4 0x55b37a98f029 <unknown>\n#5 0x55b37a9cdccc <unknown>\n#6 0x55b37a9cd47f <unknown>\n#7 0x55b37a9c4de3 <unknown>\n#8 0x55b37a99a2dd <unknown>\n#9 0x55b37a99b34e <unknown>\n#10 0x55b37abfa3e4 <unknown>\n#11 0x55b37abfe3d7 <unknown>\n#12 0x55b37ac08b20 <unknown>\n#13 0x55b37abff023 <unknown>\n#14 0x55b37abcd1aa <unknown>\n#15 0x55b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:141 Passed:0 Failed:11
stest_1_selenium_view_project_summary,Total:142 Passed:0 Failed:11
stest_1_selenium_browse_projects_list,Total:143 Passed:0 Failed:11
stest_1_selenium_browse_boards_list,Total:144 Passed:0 Failed:11
stest_1_selenium_create_issue,Total:145 Passed:0 Failed:11
stest_1_selenium_edit_issue,Total:146 Passed:0 Failed:11
stest_1_selenium_save_comment,Total:147 Passed:0 Failed:11
stest_1_selenium_search_jql,Total:148 Passed:0 Failed:11
stest_1_selenium_view_backlog_for_scrum_board,Total:149 Passed:0 Failed:11
stest_1_selenium_view_scrum_board,Total:150 Passed:0 Failed:11
stest_1_selenium_view_kanban_board,Total:151 Passed:0 Failed:11
stest_1_selenium_view_dashboard,Total:152 Passed:0 Failed:11
stest_1_selenium_view_issue,Total:153 Passed:0 Failed:11
stest_2_selenium_z_log_out,Total:154 Passed:0 Failed:11


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '207094', 'issue_key': 'AAFAIA-1586', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259407.4301438
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259407.430338
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55b37ac3a4e3 <unknown>\n#1 0x55b37a969c76 <unknown>\n#2 0x55b37a99704a <unknown>\n#3 0x55b37a9924a1 <unknown>\n#4 0x55b37a98f029 <unknown>\n#5 0x55b37a9cdccc <unknown>\n#6 0x55b37a9cd47f <unknown>\n#7 0x55b37a9c4de3 <unknown>\n#8 0x55b37a99a2dd <unknown>\n#9 0x55b37a99b34e <unknown>\n#10 0x55b37abfa3e4 <unknown>\n#11 0x55b37abfe3d7 <unknown>\n#12 0x55b37ac08b20 <unknown>\n#13 0x55b37abff023 <unknown>\n#14 0x55b37abcd1aa <unknown>\n#15 0x55b37ac236b8 <unknown>\n#16 0x55b37ac23847 <unknown>\n#17 0x55b37ac33243 <unknown>\n#18 0x7f689c5a9ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.69s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259408144,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259408144,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '208985', 'issue_key': 'AAFAIA-3477', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259408.143938
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...6232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259408.1441355
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x56232b8024e3 <unknown>\n#1 0x56232b531c76 <unknown>\n#2 0x56232b55f04a <unknown>\n#3 0x56232b55a4a1 <unknown>\n#4 0x56232b557029 <unknown>\n#5 0x56232b595ccc <unknown>\n#6 0x56232b59547f <unknown>\n#7 0x56232b58cde3 <unknown>\n#8 0x56232b5622dd <unknown>\n#9 0x56232b56334e <unknown>\n#10 0x56232b7c23e4 <unknown>\n#11 0x56232b7c63d7 <unknown>\n#12 0x56232b7d0b20 <unknown>\n#13 0x56232b7c7023 <unknown>\n#14 0x56232b7951aa <unknown>\n#15 0x56232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:155 Passed:0 Failed:12
stest_1_selenium_view_project_summary,Total:156 Passed:0 Failed:12
stest_1_selenium_browse_projects_list,Total:157 Passed:0 Failed:12
stest_1_selenium_browse_boards_list,Total:158 Passed:0 Failed:12
stest_1_selenium_create_issue,Total:159 Passed:0 Failed:12
stest_1_selenium_edit_issue,Total:160 Passed:0 Failed:12
stest_1_selenium_save_comment,Total:161 Passed:0 Failed:12
stest_1_selenium_search_jql,Total:162 Passed:0 Failed:12
stest_1_selenium_view_backlog_for_scrum_board,Total:163 Passed:0 Failed:12
stest_1_selenium_view_scrum_board,Total:164 Passed:0 Failed:12
stest_1_selenium_view_kanban_board,Total:165 Passed:0 Failed:12
stest_1_selenium_view_dashboard,Total:166 Passed:0 Failed:12
stest_1_selenium_view_issue,Total:167 Passed:0 Failed:12
stest_2_selenium_z_log_out,Total:168 Passed:0 Failed:12


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '208985', 'issue_key': 'AAFAIA-3477', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259408.143938
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...6232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259408.1441355
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x56232b8024e3 <unknown>\n#1 0x56232b531c76 <unknown>\n#2 0x56232b55f04a <unknown>\n#3 0x56232b55a4a1 <unknown>\n#4 0x56232b557029 <unknown>\n#5 0x56232b595ccc <unknown>\n#6 0x56232b59547f <unknown>\n#7 0x56232b58cde3 <unknown>\n#8 0x56232b5622dd <unknown>\n#9 0x56232b56334e <unknown>\n#10 0x56232b7c23e4 <unknown>\n#11 0x56232b7c63d7 <unknown>\n#12 0x56232b7d0b20 <unknown>\n#13 0x56232b7c7023 <unknown>\n#14 0x56232b7951aa <unknown>\n#15 0x56232b7eb6b8 <unknown>\n#16 0x56232b7eb847 <unknown>\n#17 0x56232b7fb243 <unknown>\n#18 0x7f670562fea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.69s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259408849,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259408849,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206006', 'issue_key': 'AAFAIA-498', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AA...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259408.848809
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259408.8490028
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55ebacbd94e3 <unknown>\n#1 0x55ebac908c76 <unknown>\n#2 0x55ebac93604a <unknown>\n#3 0x55ebac9314a1 <unknown>\n#4 0x55ebac92e029 <unknown>\n#5 0x55ebac96cccc <unknown>\n#6 0x55ebac96c47f <unknown>\n#7 0x55ebac963de3 <unknown>\n#8 0x55ebac9392dd <unknown>\n#9 0x55ebac93a34e <unknown>\n#10 0x55ebacb993e4 <unknown>\n#11 0x55ebacb9d3d7 <unknown>\n#12 0x55ebacba7b20 <unknown>\n#13 0x55ebacb9e023 <unknown>\n#14 0x55ebacb6c1aa <unknown>\n#15 0x55ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:169 Passed:0 Failed:13
stest_1_selenium_view_project_summary,Total:170 Passed:0 Failed:13
stest_1_selenium_browse_projects_list,Total:171 Passed:0 Failed:13
stest_1_selenium_browse_boards_list,Total:172 Passed:0 Failed:13
stest_1_selenium_create_issue,Total:173 Passed:0 Failed:13
stest_1_selenium_edit_issue,Total:174 Passed:0 Failed:13
stest_1_selenium_save_comment,Total:175 Passed:0 Failed:13
stest_1_selenium_search_jql,Total:176 Passed:0 Failed:13
stest_1_selenium_view_backlog_for_scrum_board,Total:177 Passed:0 Failed:13
stest_1_selenium_view_scrum_board,Total:178 Passed:0 Failed:13
stest_1_selenium_view_kanban_board,Total:179 Passed:0 Failed:13
stest_1_selenium_view_dashboard,Total:180 Passed:0 Failed:13
stest_1_selenium_view_issue,Total:181 Passed:0 Failed:13
stest_2_selenium_z_log_out,Total:182 Passed:0 Failed:13


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206006', 'issue_key': 'AAFAIA-498', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AA...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259408.848809
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259408.8490028
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55ebacbd94e3 <unknown>\n#1 0x55ebac908c76 <unknown>\n#2 0x55ebac93604a <unknown>\n#3 0x55ebac9314a1 <unknown>\n#4 0x55ebac92e029 <unknown>\n#5 0x55ebac96cccc <unknown>\n#6 0x55ebac96c47f <unknown>\n#7 0x55ebac963de3 <unknown>\n#8 0x55ebac9392dd <unknown>\n#9 0x55ebac93a34e <unknown>\n#10 0x55ebacb993e4 <unknown>\n#11 0x55ebacb9d3d7 <unknown>\n#12 0x55ebacba7b20 <unknown>\n#13 0x55ebacb9e023 <unknown>\n#14 0x55ebacb6c1aa <unknown>\n#15 0x55ebacbc26b8 <unknown>\n#16 0x55ebacbc2847 <unknown>\n#17 0x55ebacbd2243 <unknown>\n#18 0x7f5353988ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.68s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259409554,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259409554,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206402', 'issue_key': 'AAFAIA-894', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AA...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259409.5537872
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259409.5539763
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55c351abf4e3 <unknown>\n#1 0x55c3517eec76 <unknown>\n#2 0x55c35181c04a <unknown>\n#3 0x55c3518174a1 <unknown>\n#4 0x55c351814029 <unknown>\n#5 0x55c351852ccc <unknown>\n#6 0x55c35185247f <unknown>\n#7 0x55c351849de3 <unknown>\n#8 0x55c35181f2dd <unknown>\n#9 0x55c35182034e <unknown>\n#10 0x55c351a7f3e4 <unknown>\n#11 0x55c351a833d7 <unknown>\n#12 0x55c351a8db20 <unknown>\n#13 0x55c351a84023 <unknown>\n#14 0x55c351a521aa <unknown>\n#15 0x55c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:183 Passed:0 Failed:14
stest_1_selenium_view_project_summary,Total:184 Passed:0 Failed:14
stest_1_selenium_browse_projects_list,Total:185 Passed:0 Failed:14
stest_1_selenium_browse_boards_list,Total:186 Passed:0 Failed:14
stest_1_selenium_create_issue,Total:187 Passed:0 Failed:14
stest_1_selenium_edit_issue,Total:188 Passed:0 Failed:14
stest_1_selenium_save_comment,Total:189 Passed:0 Failed:14
stest_1_selenium_search_jql,Total:190 Passed:0 Failed:14
stest_1_selenium_view_backlog_for_scrum_board,Total:191 Passed:0 Failed:14
stest_1_selenium_view_scrum_board,Total:192 Passed:0 Failed:14
stest_1_selenium_view_kanban_board,Total:193 Passed:0 Failed:14
stest_1_selenium_view_dashboard,Total:194 Passed:0 Failed:14
stest_1_selenium_view_issue,Total:195 Passed:0 Failed:14
stest_2_selenium_z_log_out,Total:196 Passed:0 Failed:14


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206402', 'issue_key': 'AAFAIA-894', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AA...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259409.5537872
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259409.5539763
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55c351abf4e3 <unknown>\n#1 0x55c3517eec76 <unknown>\n#2 0x55c35181c04a <unknown>\n#3 0x55c3518174a1 <unknown>\n#4 0x55c351814029 <unknown>\n#5 0x55c351852ccc <unknown>\n#6 0x55c35185247f <unknown>\n#7 0x55c351849de3 <unknown>\n#8 0x55c35181f2dd <unknown>\n#9 0x55c35182034e <unknown>\n#10 0x55c351a7f3e4 <unknown>\n#11 0x55c351a833d7 <unknown>\n#12 0x55c351a8db20 <unknown>\n#13 0x55c351a84023 <unknown>\n#14 0x55c351a521aa <unknown>\n#15 0x55c351aa86b8 <unknown>\n#16 0x55c351aa8847 <unknown>\n#17 0x55c351ab8243 <unknown>\n#18 0x7f22dbb7fea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.68s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259410268,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259410268,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206893', 'issue_key': 'AAFAIA-1385', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259410.2682161
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259410.2684274
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5595813864e3 <unknown>\n#1 0x5595810b5c76 <unknown>\n#2 0x5595810e304a <unknown>\n#3 0x5595810de4a1 <unknown>\n#4 0x5595810db029 <unknown>\n#5 0x559581119ccc <unknown>\n#6 0x55958111947f <unknown>\n#7 0x559581110de3 <unknown>\n#8 0x5595810e62dd <unknown>\n#9 0x5595810e734e <unknown>\n#10 0x5595813463e4 <unknown>\n#11 0x55958134a3d7 <unknown>\n#12 0x559581354b20 <unknown>\n#13 0x55958134b023 <unknown>\n#14 0x5595813191aa <unknown>\n#15 0x55958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:197 Passed:0 Failed:15
stest_1_selenium_view_project_summary,Total:198 Passed:0 Failed:15
stest_1_selenium_browse_projects_list,Total:199 Passed:0 Failed:15
stest_1_selenium_browse_boards_list,Total:200 Passed:0 Failed:15
stest_1_selenium_create_issue,Total:201 Passed:0 Failed:15
stest_1_selenium_edit_issue,Total:202 Passed:0 Failed:15
stest_1_selenium_save_comment,Total:203 Passed:0 Failed:15
stest_1_selenium_search_jql,Total:204 Passed:0 Failed:15
stest_1_selenium_view_backlog_for_scrum_board,Total:205 Passed:0 Failed:15
stest_1_selenium_view_scrum_board,Total:206 Passed:0 Failed:15
stest_1_selenium_view_kanban_board,Total:207 Passed:0 Failed:15
stest_1_selenium_view_dashboard,Total:208 Passed:0 Failed:15
stest_1_selenium_view_issue,Total:209 Passed:0 Failed:15
stest_2_selenium_z_log_out,Total:210 Passed:0 Failed:15


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '206893', 'issue_key': 'AAFAIA-1385', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259410.2682161
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259410.2684274
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5595813864e3 <unknown>\n#1 0x5595810b5c76 <unknown>\n#2 0x5595810e304a <unknown>\n#3 0x5595810de4a1 <unknown>\n#4 0x5595810db029 <unknown>\n#5 0x559581119ccc <unknown>\n#6 0x55958111947f <unknown>\n#7 0x559581110de3 <unknown>\n#8 0x5595810e62dd <unknown>\n#9 0x5595810e734e <unknown>\n#10 0x5595813463e4 <unknown>\n#11 0x55958134a3d7 <unknown>\n#12 0x559581354b20 <unknown>\n#13 0x55958134b023 <unknown>\n#14 0x5595813191aa <unknown>\n#15 0x55958136f6b8 <unknown>\n#16 0x55958136f847 <unknown>\n#17 0x55958137f243 <unknown>\n#18 0x7f0ea5391ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.71s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259411018,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259411018,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915199', 'issue_key': 'AABIS-635', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259411.017609
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259411.0178018
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55e3f5e234e3 <unknown>\n#1 0x55e3f5b52c76 <unknown>\n#2 0x55e3f5b8004a <unknown>\n#3 0x55e3f5b7b4a1 <unknown>\n#4 0x55e3f5b78029 <unknown>\n#5 0x55e3f5bb6ccc <unknown>\n#6 0x55e3f5bb647f <unknown>\n#7 0x55e3f5badde3 <unknown>\n#8 0x55e3f5b832dd <unknown>\n#9 0x55e3f5b8434e <unknown>\n#10 0x55e3f5de33e4 <unknown>\n#11 0x55e3f5de73d7 <unknown>\n#12 0x55e3f5df1b20 <unknown>\n#13 0x55e3f5de8023 <unknown>\n#14 0x55e3f5db61aa <unknown>\n#15 0x55e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:211 Passed:0 Failed:16
stest_1_selenium_view_project_summary,Total:212 Passed:0 Failed:16
stest_1_selenium_browse_projects_list,Total:213 Passed:0 Failed:16
stest_1_selenium_browse_boards_list,Total:214 Passed:0 Failed:16
stest_1_selenium_create_issue,Total:215 Passed:0 Failed:16
stest_1_selenium_edit_issue,Total:216 Passed:0 Failed:16
stest_1_selenium_save_comment,Total:217 Passed:0 Failed:16
stest_1_selenium_search_jql,Total:218 Passed:0 Failed:16
stest_1_selenium_view_backlog_for_scrum_board,Total:219 Passed:0 Failed:16
stest_1_selenium_view_scrum_board,Total:220 Passed:0 Failed:16
stest_1_selenium_view_kanban_board,Total:221 Passed:0 Failed:16
stest_1_selenium_view_dashboard,Total:222 Passed:0 Failed:16
stest_1_selenium_view_issue,Total:223 Passed:0 Failed:16
stest_2_selenium_z_log_out,Total:224 Passed:0 Failed:16


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915199', 'issue_key': 'AABIS-635', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259411.017609
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259411.0178018
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55e3f5e234e3 <unknown>\n#1 0x55e3f5b52c76 <unknown>\n#2 0x55e3f5b8004a <unknown>\n#3 0x55e3f5b7b4a1 <unknown>\n#4 0x55e3f5b78029 <unknown>\n#5 0x55e3f5bb6ccc <unknown>\n#6 0x55e3f5bb647f <unknown>\n#7 0x55e3f5badde3 <unknown>\n#8 0x55e3f5b832dd <unknown>\n#9 0x55e3f5b8434e <unknown>\n#10 0x55e3f5de33e4 <unknown>\n#11 0x55e3f5de73d7 <unknown>\n#12 0x55e3f5df1b20 <unknown>\n#13 0x55e3f5de8023 <unknown>\n#14 0x55e3f5db61aa <unknown>\n#15 0x55e3f5e0c6b8 <unknown>\n#16 0x55e3f5e0c847 <unknown>\n#17 0x55e3f5e1c243 <unknown>\n#18 0x7f562f569ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.68s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259411733,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259411733,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '209640', 'issue_key': 'AAFAIA-4132', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259411.7330225
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...6538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259411.7332122
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5653894744e3 <unknown>\n#1 0x5653891a3c76 <unknown>\n#2 0x5653891d104a <unknown>\n#3 0x5653891cc4a1 <unknown>\n#4 0x5653891c9029 <unknown>\n#5 0x565389207ccc <unknown>\n#6 0x56538920747f <unknown>\n#7 0x5653891fede3 <unknown>\n#8 0x5653891d42dd <unknown>\n#9 0x5653891d534e <unknown>\n#10 0x5653894343e4 <unknown>\n#11 0x5653894383d7 <unknown>\n#12 0x565389442b20 <unknown>\n#13 0x565389439023 <unknown>\n#14 0x5653894071aa <unknown>\n#15 0x56538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:225 Passed:0 Failed:17
stest_1_selenium_view_project_summary,Total:226 Passed:0 Failed:17
stest_1_selenium_browse_projects_list,Total:227 Passed:0 Failed:17
stest_1_selenium_browse_boards_list,Total:228 Passed:0 Failed:17
stest_1_selenium_create_issue,Total:229 Passed:0 Failed:17
stest_1_selenium_edit_issue,Total:230 Passed:0 Failed:17
stest_1_selenium_save_comment,Total:231 Passed:0 Failed:17
stest_1_selenium_search_jql,Total:232 Passed:0 Failed:17
stest_1_selenium_view_backlog_for_scrum_board,Total:233 Passed:0 Failed:17
stest_1_selenium_view_scrum_board,Total:234 Passed:0 Failed:17
stest_1_selenium_view_kanban_board,Total:235 Passed:0 Failed:17
stest_1_selenium_view_dashboard,Total:236 Passed:0 Failed:17
stest_1_selenium_view_issue,Total:237 Passed:0 Failed:17
stest_2_selenium_z_log_out,Total:238 Passed:0 Failed:17


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...56538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '209640', 'issue_key': 'AAFAIA-4132', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259411.7330225
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...6538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259411.7332122
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5653894744e3 <unknown>\n#1 0x5653891a3c76 <unknown>\n#2 0x5653891d104a <unknown>\n#3 0x5653891cc4a1 <unknown>\n#4 0x5653891c9029 <unknown>\n#5 0x565389207ccc <unknown>\n#6 0x56538920747f <unknown>\n#7 0x5653891fede3 <unknown>\n#8 0x5653891d42dd <unknown>\n#9 0x5653891d534e <unknown>\n#10 0x5653894343e4 <unknown>\n#11 0x5653894383d7 <unknown>\n#12 0x565389442b20 <unknown>\n#13 0x565389439023 <unknown>\n#14 0x5653894071aa <unknown>\n#15 0x56538945d6b8 <unknown>\n#16 0x56538945d847 <unknown>\n#17 0x56538946d243 <unknown>\n#18 0x7f94283d3ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.69s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259412447,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259412447,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...557b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '211228', 'issue_key': 'AAFAIA-5720', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259412.4465597
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...57b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259412.446751
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x557b9c8f24e3 <unknown>\n#1 0x557b9c621c76 <unknown>\n#2 0x557b9c64f04a <unknown>\n#3 0x557b9c64a4a1 <unknown>\n#4 0x557b9c647029 <unknown>\n#5 0x557b9c685ccc <unknown>\n#6 0x557b9c68547f <unknown>\n#7 0x557b9c67cde3 <unknown>\n#8 0x557b9c6522dd <unknown>\n#9 0x557b9c65334e <unknown>\n#10 0x557b9c8b23e4 <unknown>\n#11 0x557b9c8b63d7 <unknown>\n#12 0x557b9c8c0b20 <unknown>\n#13 0x557b9c8b7023 <unknown>\n#14 0x557b9c8851aa <unknown>\n#15 0x557b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:239 Passed:0 Failed:18
stest_1_selenium_view_project_summary,Total:240 Passed:0 Failed:18
stest_1_selenium_browse_projects_list,Total:241 Passed:0 Failed:18
stest_1_selenium_browse_boards_list,Total:242 Passed:0 Failed:18
stest_1_selenium_create_issue,Total:243 Passed:0 Failed:18
stest_1_selenium_edit_issue,Total:244 Passed:0 Failed:18
stest_1_selenium_save_comment,Total:245 Passed:0 Failed:18
stest_1_selenium_search_jql,Total:246 Passed:0 Failed:18
stest_1_selenium_view_backlog_for_scrum_board,Total:247 Passed:0 Failed:18
stest_1_selenium_view_scrum_board,Total:248 Passed:0 Failed:18
stest_1_selenium_view_kanban_board,Total:249 Passed:0 Failed:18
stest_1_selenium_view_dashboard,Total:250 Passed:0 Failed:18
stest_1_selenium_view_issue,Total:251 Passed:0 Failed:18
stest_2_selenium_z_log_out,Total:252 Passed:0 Failed:18


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...557b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...557b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...557b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '211228', 'issue_key': 'AAFAIA-5720', 'issues': [['AABIS-1', '914565', 'AABIS'], ['A...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259412.4465597
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...57b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259412.446751
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x557b9c8f24e3 <unknown>\n#1 0x557b9c621c76 <unknown>\n#2 0x557b9c64f04a <unknown>\n#3 0x557b9c64a4a1 <unknown>\n#4 0x557b9c647029 <unknown>\n#5 0x557b9c685ccc <unknown>\n#6 0x557b9c68547f <unknown>\n#7 0x557b9c67cde3 <unknown>\n#8 0x557b9c6522dd <unknown>\n#9 0x557b9c65334e <unknown>\n#10 0x557b9c8b23e4 <unknown>\n#11 0x557b9c8b63d7 <unknown>\n#12 0x557b9c8c0b20 <unknown>\n#13 0x557b9c8b7023 <unknown>\n#14 0x557b9c8851aa <unknown>\n#15 0x557b9c8db6b8 <unknown>\n#16 0x557b9c8db847 <unknown>\n#17 0x557b9c8eb243 <unknown>\n#18 0x7ff5eaff5ea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.69s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 1692259413152,0,selenium_login:open_login_page,Failed measure: selenium_login:open_login_page - Exception,False,
1692259413152,0,selenium_login,Failed measure: selenium_login - Exception,False,
FAction: test_0_selenium_a_login, Error: jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915205', 'issue_key': 'AABIS-641', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259413.151432
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259413.1516292
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55f6deef84e3 <unknown>\n#1 0x55f6dec27c76 <unknown>\n#2 0x55f6dec5504a <unknown>\n#3 0x55f6dec504a1 <unknown>\n#4 0x55f6dec4d029 <unknown>\n#5 0x55f6dec8bccc <unknown>\n#6 0x55f6dec8b47f <unknown>\n#7 0x55f6dec82de3 <unknown>\n#8 0x55f6dec582dd <unknown>\n#9 0x55f6dec5934e <unknown>\n#10 0x55f6deeb83e4 <unknown>\n#11 0x55f6deebc3d7 <unknown>\n#12 0x55f6deec6b20 <unknown>\n#13 0x55f6deebd023 <unknown>\n#14 0x55f6dee8b1aa <unknown>\n#15 0x55f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception

Etest_0_selenium_a_login,Total:253 Passed:0 Failed:19
stest_1_selenium_view_project_summary,Total:254 Passed:0 Failed:19
stest_1_selenium_browse_projects_list,Total:255 Passed:0 Failed:19
stest_1_selenium_browse_boards_list,Total:256 Passed:0 Failed:19
stest_1_selenium_create_issue,Total:257 Passed:0 Failed:19
stest_1_selenium_edit_issue,Total:258 Passed:0 Failed:19
stest_1_selenium_save_comment,Total:259 Passed:0 Failed:19
stest_1_selenium_search_jql,Total:260 Passed:0 Failed:19
stest_1_selenium_view_backlog_for_scrum_board,Total:261 Passed:0 Failed:19
stest_1_selenium_view_scrum_board,Total:262 Passed:0 Failed:19
stest_1_selenium_view_kanban_board,Total:263 Passed:0 Failed:19
stest_1_selenium_view_dashboard,Total:264 Passed:0 Failed:19
stest_1_selenium_view_issue,Total:265 Passed:0 Failed:19
stest_2_selenium_z_log_out,Total:266 Passed:0 Failed:19


==================================== ERRORS ====================================
_________________ ERROR at teardown of test_0_selenium_a_login _________________

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n')

    @pytest.fixture
    def jira_screen_shots(request, jira_webdriver):
        yield
>       get_screen_shots(request, jira_webdriver)

selenium_ui/conftest.py:395: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <SubRequest 'jira_screen_shots' for <Function test_0_selenium_a_login>>
webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n')

    def get_screen_shots(request, webdriver):
        # request.node is an "item" because we use the default
        # "function" scope
        if request.node.rep_call.failed:
            mode = "w" if not selenium_error_file.exists() else "a+"
            action_name = request.node.rep_call.head_line
            error_text = request.node.rep_call.longreprtext
            with open(selenium_error_file, mode) as err_file:
                timestamp = round(time() * 1000)
                dt = datetime.datetime.now()
                utc_time = dt.replace(tzinfo=timezone.utc)
                str_time = utc_time.strftime("%m-%d-%Y, %H:%M:%S")
                str_time_stamp = f'{str_time}, {timestamp}'
                err_file.write(f"{str_time_stamp}, Action: {action_name}, Error: {error_text}\n")
            print(f"Action: {action_name}, Error: {error_text}\n")
            errors_artifacts = ENV_TAURUS_ARTIFACT_DIR / 'errors_artifacts'
            errors_artifacts.mkdir(parents=True, exist_ok=True)
            error_artifact_name = errors_artifacts / datetime_now(action_name)
>           webdriver.save_screenshot('{}.png'.format(error_artifact_name))
E           AttributeError: 'WebDriverExceptionPostpone' object has no attribute 'save_screenshot'

selenium_ui/conftest.py:440: AttributeError
=================================== FAILURES ===================================
___________________________ test_0_selenium_a_login ____________________________

jira_webdriver = WebDriverExceptionPostpone('Message: session not created: This version of ChromeDriver only supports Chrome version 11...55f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n')
jira_datasets = {'custom_issues': [], 'issue_id': '915205', 'issue_key': 'AABIS-641', 'issues': [['AABIS-1', '914565', 'AABIS'], ['AAB...', 'AABIS'], ['AABIS-4', '914568', 'AABIS'], ['AABIS-5', '914569', 'AABIS'], ['AABIS-6', '914570', 'AABIS'], ...], ...}
jira_screen_shots = None

    def test_0_selenium_a_login(jira_webdriver, jira_datasets, jira_screen_shots):
>       modules.login(jira_webdriver, jira_datasets)

selenium_ui/jira_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/jira/modules.py:74: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (), kwargs = {}, node_ip = '', start = 1692259413.151432
error_msg = 'Failed measure: selenium_login - Exception'
full_exception = Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This ...5f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n'))
success = False, exc_type = <class 'Exception'>, end = 1692259413.1516292
timing = '0'
lockfile = '/dc-app-performance-toolkit/app/results/jira/2023-08-17_08-02-48/selenium.jtl.lock'

    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip("login is failed")
        node_ip = ""
        start = time()
        error_msg = 'Success'
        full_exception = ''
        if args:
            driver = [arg for arg in args if isinstance(arg, Chrome)]
            node_ip = "" if not driver else getattr(driver[0], "node_ip", "")
        try:
            func(*args, **kwargs)
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time()
        timing = str(int((end - start) * 1000))
    
        lockfile = f'{selenium_results_file}.lock'
    
        with filelock.SoftFileLock(lockfile):
            with open(selenium_results_file, "a+") as jtl_file:
                timestamp = round(time() * 1000)
                if explicit_timing:
                    jtl_file.write(f"{timestamp},{explicit_timing*1000},{interaction},,{error_msg},"
                                   f",{success},0,0,0,0,,0\n")
                else:
                    jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg}"
                                   f",,{success},0,0,0,0,{node_ip},0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success},{node_ip}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - Exception', Exception('Message: session not created: This version of ChromeDriver only supports Chrome version 114\nCurrent browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55f6deef84e3 <unknown>\n#1 0x55f6dec27c76 <unknown>\n#2 0x55f6dec5504a <unknown>\n#3 0x55f6dec504a1 <unknown>\n#4 0x55f6dec4d029 <unknown>\n#5 0x55f6dec8bccc <unknown>\n#6 0x55f6dec8b47f <unknown>\n#7 0x55f6dec82de3 <unknown>\n#8 0x55f6dec582dd <unknown>\n#9 0x55f6dec5934e <unknown>\n#10 0x55f6deeb83e4 <unknown>\n#11 0x55f6deebc3d7 <unknown>\n#12 0x55f6deec6b20 <unknown>\n#13 0x55f6deebd023 <unknown>\n#14 0x55f6dee8b1aa <unknown>\n#15 0x55f6deee16b8 <unknown>\n#16 0x55f6deee1847 <unknown>\n#17 0x55f6deef1243 <unknown>\n#18 0x7f3d893dbea7 start_thread\n')))

selenium_ui/conftest.py:169: Exception
=============================== warnings summary ===============================
../../root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204
  /root/.bzt/python-packages/3.11.4/_pytest/config/__init__.py:1204: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: apiritif
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED selenium_ui/jira_ui.py::test_0_selenium_a_login - Exception: ('Failed ...
ERROR selenium_ui/jira_ui.py::test_0_selenium_a_login - AttributeError: 'WebD...
============== 1 failed, 13 skipped, 1 warning, 1 error in 0.68s ===============
============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0
rootdir: /dc-app-performance-toolkit/app
plugins: xdist-3.3.1, apiritif-1.1.3
collected 14 items

selenium_ui/jira_ui.py 